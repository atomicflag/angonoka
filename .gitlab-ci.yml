stages:
  - test
  - build
  - deploy

.cpp:
  image: registry.gitlab.com/signal9/cpp-env:13.0.0
  variables:
    CCACHE_DIR: "$CI_PROJECT_DIR/.ccache"
    CCACHE_BASEDIR: "$CI_PROJECT_DIR"
    CCACHE_LOGFILE: "$CI_PROJECT_DIR/ccache.log"
    CCACHE_COMPRESS: "1"
    CCACHE_COMPRESSLEVEL: "9"
    CCACHE_SLOPPINESS: "system_headers,locale,include_file_ctime,include_file_mtime,time_macros"
    ASAN_OPTIONS: "alloc_dealloc_mismatch=0"
  only:
    changes:
      - src/**/*
      - test/**/*
      - meson.build
      - conanfile.txt
      - conan.lock
      - meson_options.txt
      - Makefile
  cache:
    key: "$CI_COMMIT_REF_SLUG-$CI_JOB_NAME"
    paths:
      - .ccache
  before_script:
    - conan remote add signal9 
      https://signal9.jfrog.io/artifactory/api/conan/conan --insert
    - conan config set general.revisions_enabled=1
    - make check/format
    - export CCACHE_DISABLE=1
    - make build/conaninfo.txt
    - unset CCACHE_DISABLE
  after_script:
    - ccache --show-stats
    - |
      to_delete="$(sed -En \
        '/(Retrieved|Stored)/s/.*\((.*)\)/\1/gp' \
        $CCACHE_LOGFILE | sort -u)
      $(find $CCACHE_DIR -type f)"
      to_delete=$(echo "$to_delete" | sort | uniq -u)
      if [[ -n "$to_delete" ]]; then
        rm $to_delete
        count_deleted=$(echo "$to_delete" | wc -l)
        echo "Removed $count_deleted cache entries"
      fi

test-cpp:
  extends: .cpp
  stage: test
  script:
    - make build/cov
    - make test
    - pip install --no-cache-dir pytest
    - make test/functional
    - make check/cov
    - ln -sf /usr/bin/python{3,}
    - rm -rf build
    - |
      pids=$(sed -En \
        '/Result: .*miss/s/^\[[^ ]+ ([0-9]+) *\].*/\1/gp' \
        $CCACHE_LOGFILE | sort -u)
      pids=$(echo $pids | tr ' ' '|')
      export CLANG_TIDY_FILES=$(sed -En \
        "/^\[[^ ]+ ($pids) *\]/s%.*Source file: (\.\./src/.*\.cpp)$%\1%p" \
        $CCACHE_LOGFILE | tr '\n' ' ')
    - make check/tidy

build-cpp:
  extends: .cpp
  stage: build
  artifacts:
    paths:
      - dist
      - debug
    expire_in: 1 day
  script:
    - make release
    - make install

.js:
  image: node
  variables:
    NODE_ENV: development
  # only:
  #   changes:
  #     - tools/visualizer/**/*
  cache:
    key: "$CI_COMMIT_REF_SLUG-js"
    paths:
      - tools/visualizer/node_modules
  before_script:
    - cd tools/visualizer
    - yarn install

test-js:
  extends: .js
  stage: test
  script:
    - yarn lint
    - yarn test

build-js:
  extends: .js
  stage: build
  artifacts:
    paths:
      - tools/visualizer/dist
    expire_in: 1 day
  script:
    - yarn build

pages:
  stage: deploy
  dependencies:
    - build-js
  # only:
  #   changes:
  #     - tools/visualizer/**/*
  script:
    - mkdir public
    - mv tools/visualizer/dist public/visualizer
  artifacts:
    paths:
      - public
